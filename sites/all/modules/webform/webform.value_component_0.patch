Index: components/value.inc
===================================================================
--- components/value.inc
+++ components/value.inc
@@ -0,0 +1,157 @@
+<?php
+
+/**
+ * @file
+ * Webform module value component.
+ */
+
+/**
+ * Implementation of _webform_defaults_component().
+ */
+function _webform_defaults_value() {
+  return array(
+    'name' => '',
+    'form_key' => NULL,
+    'pid' => 0,
+    'weight' => 0,
+    'value' => '',
+    'extra' => array(
+      'format' => FILTER_FORMAT_DEFAULT,
+    ),
+  );
+}
+
+/**
+ * Implementation of _webform_theme_component().
+ */
+function _webform_theme_value() {
+  return array(
+    'webform_display_value' => array(
+      'arguments' => array('element' => NULL),
+    ),
+  );
+}
+
+/**
+ * Implementation of _webform_edit_component().
+ */
+function _webform_edit_value($component) {
+  $form = array();
+  $form['value']['value'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Default value'),
+    '#default_value' => $component['value'],
+    '#description' => t('The default value of the field.') . theme('webform_token_help'),
+    '#cols' => 60,
+    '#rows' => 5,
+    '#weight' => -1,
+    '#parents' => array('value'),
+  );
+  // Add the filter form.
+  $form['value']['format'] = filter_form($component['extra']['format'], 0, array('extra', 'format'));
+  $form['extra']['description'] = array(); // Hide the description.
+  $form['display'] = array('#type' => 'markup'); // Hide the display options.
+  $form['display']['title_display'] = array();
+  return $form;
+}
+
+/**
+ * Implementation of _webform_render_component().
+ */
+function _webform_render_value($component, $value = NULL, $filter = TRUE) {
+  $element = array(
+    '#type' => 'value',
+    '#title' => $component['name'],
+    '#default_value' => $filter ? _webform_filter_values(check_markup($component['value'], $component['extra']['format'], FALSE), NULL, NULL, NULL, TRUE, TRUE) : $component['value'],
+    '#input_format' => $component['extra']['format'],
+    '#weight' => $component['weight'],
+  );
+  return $element;
+}
+
+/**
+ * Implementation of _webform_display_component().
+ */
+function _webform_display_value($component, $value, $format = 'html') {
+  $element = array(
+    '#title' => t('!name (value)', array('!name' => $component['name'])),
+    '#value' => isset($value[0]) ? $value[0] : NULL,
+    '#weight' => $component['weight'],
+    '#theme' => 'webform_display_value',
+    '#component' => $component,
+    '#format' => $format,
+    '#theme' => 'webform_display_value',
+    '#theme_wrappers' => $format == 'text' ? array('webform_element_text') : array('webform_element'),
+    '#post_render' => array('webform_element_wrapper'),
+  );
+
+  // TODO: This check is unusual. It shows value fields in e-mails but not
+  // when viewing in the browser unless you're an administrator. This should be
+  // a more logical check. See these related issues:
+  // http://drupal.org/node/313639
+  // http://drupal.org/node/781786
+  if ($format == 'html') {
+    $element['#access'] = user_access('edit all webform submissions') || user_access('access all webform results');
+  }
+
+  return $element;
+}
+
+function theme_webform_display_value($element) {
+  return $element['#format'] == 'html' ? check_plain($element['#value']) : $element['#value'];
+}
+
+/**
+ * Implementation of _webform_analysis_component().
+ */
+function _webform_analysis_value($component, $sids = array()) {
+  $placeholders = count($sids) ? array_fill(0, count($sids), "'%s'") : array();
+  $sidfilter = count($sids) ? " AND sid in (" . implode(",", $placeholders) . ")" : "";
+  $query = 'SELECT data ' .
+    ' FROM {webform_submitted_data} ' .
+    ' WHERE nid = %d ' .
+    ' AND cid = %d ' . $sidfilter;
+  $nonblanks = 0;
+  $submissions = 0;
+  $wordcount = 0;
+
+  $result = db_query($query, array_merge(array($component['nid'], $component['cid']), $sids));
+  while ($data = db_fetch_array($result)) {
+    if ( strlen(trim($data['data'])) > 0 ) {
+      $nonblanks++;
+      $wordcount += str_word_count(trim($data['data']));
+    }
+    $submissions++;
+  }
+
+  $rows[0] = array( t('Empty'), ($submissions - $nonblanks));
+  $rows[1] = array( t('Non-empty'), $nonblanks);
+  $rows[2] = array( t('Average submission length in words (ex blanks)'),
+                    ($nonblanks !=0 ? number_format($wordcount/$nonblanks, 2) : '0'));
+  return $rows;
+}
+
+/**
+ * Implementation of _webform_csv_data_component().
+ */
+function _webform_table_value($component, $value) {
+  return check_plain(empty($value[0]) ? '' : $value[0]);
+}
+
+/**
+ * Implementation of _webform_csv_data_component().
+ */
+function _webform_csv_headers_value($component, $export_options) {
+  $header = array();
+  $header[0] = '';
+  $header[1] = '';
+  $header[2] = $component['name'];
+  return $header;
+}
+
+/**
+ * Implementation of _webform_csv_data_component().
+ */
+function _webform_csv_data_value($component, $export_options, $value) {
+  return empty($value[0]) ? '' : $value[0];
+}
Index: webform.module
===================================================================
--- webform.module
+++ webform.module
@@ -754,6 +754,16 @@
       ),
       'file' => 'components/time.inc',
     ),
+    'value' => array(
+      'label' => t('Value'),
+      'description' => t('A field which is not visible to the user, but is recorded with the submission.'),
+      'file' => 'components/value.inc',
+      'features' => array(
+        'required' => FALSE,
+        'email_address' => TRUE,
+        'email_name' => TRUE,
+      ),
+    ),
   );
 }
